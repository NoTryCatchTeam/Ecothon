@page "/"
@inject IJSRuntime Js
@inject IStrapiApiService StrapiApiService

<PageTitle>Карта объектов</PageTitle>

<div id="map" class="map"></div>

<div class="container-fluid main">

    <NavMenu/>

    <div class="infos">

        <MapFilters/>

        <div class="container-fluid info-container park animate__animated animate__fadeInRight" style="@_parkDisplayStyle">

            <div class="header">
                <h5>Карточка парка</h5>
                <div class="btn" @onclick="OnCloseParkClickAction">
                    <img src="images/ic_close.svg" width="24" height="24" alt="Close park info"/>
                </div>
            </div>

            <div class="menu">
                <div class="btn @(_selectedMenuItem == 0 ? "active" : "")" @onclick="() => OnMenuItemClicked(0)">
                    <p>О парке</p>
                </div>

                <div class="btn @(_selectedMenuItem == 1 ? "active" : "")" @onclick="() => OnMenuItemClicked(1)">
                    <p>Реестр объектов</p>
                </div>
            </div>

            <div class="park-section about @(_selectedMenuItem == 0 ? "active" : "")">
                <h6 style="font-weight: 600">Москворецкий природно-исторический парк</h6>

                <div class="image">
                    <img src="images/image_park.png" alt="Park">
                </div>

                <p class="coordinates">Координаты <span style="font-weight: 500">55.862095, 37.825685</span></p>
            </div>

            <div class="park-section registry @(_selectedMenuItem == 1 ? "active" : "")">
                @foreach (var registryObject in _registryObjects)
                {
                    <div class="registry-item" @onclick="OnRegistryItemClickAction">
                        <img class="registry-item-image" src="images/image_gornostai_small.png" alt="Gornostai"/>
                        <h6 class="registry-item-name">@registryObject.Name</h6>
                        <p class="registry-item-specie">@registryObject.Specie</p>
                    </div>
                }
            </div>

        </div>

        <div class="container-fluid info-container object animate__animated animate__fadeInRight" style="@_objectDisplayStyle">

            <div class="header">
                <h5>Карточка объекта</h5>
                <div class="btn" @onclick="OnCloseObjectClickAction">
                    <img src="images/ic_close.svg" width="24" height="24" alt="Close object info"/>
                </div>
            </div>

            <div class="image">
                <img src="images/image_gornostai.png" alt="Object">
            </div>

            <h6 style="font-size: 18px">Статус</h6>

            <div class="status">

                <p class="name" style="grid-column: 1/2; grid-row: 1/2">Категория:</p>
                <p class="value" style="grid-column: 2/3; grid-row: 1/2">1</p>

                <hr class="separator" style="grid-row: 2/3"/>

                <p class="name" style="grid-column: 1/2; grid-row: 3/4">Распространение:</p>
                <p class="value" style="grid-column: 2/3; grid-row: 3/4">Европа, Сибирь, Дальний Восток, Средняя Азия</p>

                <hr class="separator" style="grid-row: 4/5"/>

                <p class="name" style="grid-column: 1/2; grid-row: 5/6">Численность, Москва:</p>
                <p class="value" style="grid-column: 2/3; grid-row: 5/6">редко, до 2012 г.</p>

                <hr class="separator" style="grid-row: 6/7"/>

                <p class="name" style="grid-column: 1/2; grid-row: 7/8">Численность, ТиНАО:</p>
                <p class="value" style="grid-column: 2/3; grid-row: 7/8">&lt; 200 особей, 1990 г.</p>

                <hr class="separator" style="grid-row: 8/9"/>

                <p class="name" style="grid-column: 1/2; grid-row: 9/10">Особенности обитания:</p>
                <p class="value" style="grid-column: 2/3; grid-row: 9/10">Полуоткрытые биотопы</p>

            </div>

        </div>

    </div>

</div>

@code
{
    private int _selectedMenuItem;
    private IEnumerable<RegistryObject> _registryObjects;
    private string _parkDisplayStyle;
    private string _objectDisplayStyle;
    private bool _parkOpened;
    private bool _objectsOpened;
    private DotNetObjectReference<Home> _objRef;
    
    [JSInvokable]
    public void OnPolygonClicked(string id)
    {
        _parkOpened = true;
        ChangeParkDisplayStyle();
        StateHasChanged();

        // Api request, update _registryObjects
    }

    public void Dispose() => _objRef?.Dispose();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            var park = await StrapiApiService.GetParkItemAsync();

            await Js.InvokeVoidAsync("addPolygonOnMap", park.Polygon.Geometries.SelectMany(g => g.Coordinates).SelectMany(c => c).Select(x => x.Reverse()).ToArray()s, park.Name, park.Name, _objRef);
        }
        catch
        {
            //
        }
    }
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await Js.InvokeVoidAsync("initializeMap", 55.75, 37.62);
        }
    }

    protected override void OnInitialized()
    {
        _objRef = DotNetObjectReference.Create(this);
        ChangeParkDisplayStyle();
        ChangeObjectDisplayStyle();

        _registryObjects = new []
        {
            new RegistryObject { Name = "Горностай", Specie = "Mustela erminea Linnaeus" },
            new RegistryObject { Name = "Брат Горностая", Specie = "Mustela erminea Linnaeus 1" },
            new RegistryObject { Name = "Сестра Горностая", Specie = "Mustela erminea Linnaeus 2" },
            new RegistryObject { Name = "Сват Горностая", Specie = "Mustela erminea Linnaeus 3" },
        };
    }

    private void OnMenuItemClicked(int item)
    {
        _selectedMenuItem = item;
    }

    private void OnRegistryItemClickAction()
    {
        _objectsOpened = true;
        ChangeObjectDisplayStyle();
    }

    private void OnCloseParkClickAction()
    {
        _parkOpened = false;
        _selectedMenuItem = 0;
        ChangeParkDisplayStyle();
    }

    private void OnCloseObjectClickAction()
    {
        _objectsOpened = false;
        ChangeObjectDisplayStyle();
    }

    private void ChangeParkDisplayStyle()
    {
        _parkDisplayStyle = $"display: {(_parkOpened ? "block" : "none")}";
    }

    private void ChangeObjectDisplayStyle()
    {
        _objectDisplayStyle = $"display: {(_objectsOpened ? "flex" : "none")}";
    }

    private class RegistryObject
    {
        public string Name { get; set; }

        public string Specie { get; set; }
    }

}